{"version":3,"sources":["../src/index.js"],"names":["cardStyle","border","borderRadius","padding","boxShadow","maxWidth","titleStyle","fontSize","fontWeight","marginBottom","subheadingStyle","color","containerStyle","height","margin","fontFamily","display","justifyContent","alignItems","DefaultOnlyOneTabComponent","props","appName","withOneTabEnforcer","OnlyOneTabComponent","localStorageTimeout","localStorageResetInterval","WrappedComponent","isDuplicatedWindow","localStorageTabKey","ItemType","Session","Local","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","GetItem","itemtype","val","window","decodeURIComponent","undefined","SetItem","createGUID","s4","Math","floor","random","toString","isTabDuplicated","sessionGuid","tabObj","JSON","parse","timestamp","guid","setTabObj","newTabObj","stringify","setInterval","onunload","localStorage","removeItem"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst cardStyle = {\n  border: \"1px solid #ccc\",\n  borderRadius: \"8px\",\n  padding: \"20px\",\n  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n  maxWidth: \"90%\",\n  // textAlign: 'center',\n};\n\nconst titleStyle = {\n  fontSize: \"24px\",\n  fontWeight: \"bold\",\n  marginBottom: \"10px\",\n};\n\nconst subheadingStyle = {\n  fontSize: \"18px\",\n  color: \"#555\",\n};\n\nconst containerStyle = {\n  height: \"100vh\",\n  margin: 0,\n  fontFamily: \"Arial, sans-serif\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nconst DefaultOnlyOneTabComponent = (props) => (\n  <div style={containerStyle}>\n    <div style={cardStyle}>\n      <div style={titleStyle}>{props.appName ? props.appName : \"OCM Application\"}</div>\n      <div style={subheadingStyle}>Sorry! You can only have this application opened in one tab</div>\n    </div>\n  </div>\n);\n\n// eslint-disable-next-line import/prefer-default-export\nexport function withOneTabEnforcer({\n  OnlyOneTabComponent = DefaultOnlyOneTabComponent,\n  localStorageTimeout = 15 * 1000, // 15,000 milliseconds = 15 seconds.\n  localStorageResetInterval = 10 * 1000, // 10,000 milliseconds = 10 seconds.\n  appName = \"default-app-name\" // has to be unique!\n} = {}) {\n  return WrappedComponent => {\n    // ...and returns another component...\n    return props => {\n      if (\n        isDuplicatedWindow(\n          localStorageTimeout,\n          localStorageResetInterval,\n          appName\n        )\n      ) {\n        return <OnlyOneTabComponent appName={appName}/>;\n      } else {\n        return <WrappedComponent {...props} />;\n      }\n    };\n  };\n}\n\nconst isDuplicatedWindow = function(\n  localStorageTimeout,\n  localStorageResetInterval,\n  localStorageTabKey\n) {\n  var ItemType = {\n    Session: 1,\n    Local: 2\n  };\n\n  function setCookie(name, value, days) {\n    var expires = \"\";\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n  }\n\n  function getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == \" \") c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n\n  function GetItem(itemtype) {\n    var val = \"\";\n    switch (itemtype) {\n      case ItemType.Session:\n        val = window.name;\n        break;\n      case ItemType.Local:\n        val = decodeURIComponent(getCookie(localStorageTabKey));\n        if (val == undefined) val = \"\";\n        break;\n    }\n    return val;\n  }\n\n  function SetItem(itemtype, val) {\n    switch (itemtype) {\n      case ItemType.Session:\n        window.name = val;\n        break;\n      case ItemType.Local:\n        setCookie(localStorageTabKey, val);\n        break;\n    }\n  }\n\n  function createGUID() {\n    const s4 = function() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    };\n    return (\n      s4() +\n      s4() +\n      \"-\" +\n      s4() +\n      \"-\" +\n      s4() +\n      \"-\" +\n      s4() +\n      \"-\" +\n      s4() +\n      s4() +\n      s4()\n    );\n  }\n\n  /**\n   * Compare our tab identifier associated with this session (particular tab)\n   * with that of one that is in window name Storage (the active one for this browser).\n   * This browser tab is good if any of the following are true:\n   * 1.  There is no cookie Storage Guid yet (first browser tab).\n   * 2.  The window name Storage Guid matches the cookie Guid.  Same tab, refreshed.\n   * 3.  The window name Storage timeout period has ended.\n   *\n   * If our current session is the correct active one, an interval will continue\n   * to re-insert the window name Storage value with an updated timestamp.\n   *\n   * Another thing, that should be done (so you can open a tab within 15 seconds of closing it) would be to do the following (or hook onto an existing onunload method):\n   */\n  function isTabDuplicated() {\n    //console.log(\"In testTab\");\n    var sessionGuid = GetItem(ItemType.Session) || createGUID();\n    SetItem(ItemType.Session, sessionGuid);\n\n    var val = GetItem(ItemType.Local);\n    var tabObj = (val == \"\" ? null : JSON.parse(val)) || null;\n\n    // If no or stale tab object, our session is the winner.  If the guid matches, ours is still the winner\n    if (\n      tabObj === null ||\n      tabObj.timestamp < new Date().getTime() - localStorageTimeout ||\n      tabObj.guid === sessionGuid\n    ) {\n      const setTabObj = () => {\n        //console.log(\"In setTabObj\");\n        var newTabObj = {\n          guid: sessionGuid,\n          timestamp: new Date().getTime()\n        };\n        SetItem(ItemType.Local, JSON.stringify(newTabObj));\n      };\n\n      setTabObj();\n      setInterval(setTabObj, localStorageResetInterval); //every x interval refresh timestamp in cookie\n      window.onunload = () => {\n        SetItem(ItemType.Local, \"\");\n        localStorage.removeItem(localStorageTabKey);\n      };\n      return false;\n    } else {\n      // An active tab is already open that does not match our session guid.\n      return true;\n    }\n  }\n  return isTabDuplicated();\n};\n"],"file":"index.js"}